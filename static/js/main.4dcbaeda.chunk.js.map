{"version":3,"sources":["OfferPack/index.js","App.js","reportWebVitals.js","index.js"],"names":["getItem","isActive","title","text","active","OfferPack","index","onSubmit","useState","activeItem","setActive","middle","setMiddle","stickyRef","useRef","listCount","useMemo","Math","floor","random","list","Array","fill","useEffect","onWindowResize","throttle","current","stickyHeight","offsetHeight","window","innerHeight","addEventListener","removeEventListener","className","map","i","onClick","id","top","bottomBoundary","ref","App","value","console","dir","newUrl","location","href","replace","_","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAKMA,EAAU,SAACC,GAAD,MAAe,CAC7BC,MAAO,SACPC,KAAM,sBACNC,OAAQH,IAAY,IAwEPI,EAnEG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACTC,mBAAS,GADA,mBAClCC,EADkC,KACtBC,EADsB,OAEbF,mBAAS,GAFI,mBAElCG,EAFkC,KAE1BC,EAF0B,KAGnCC,EAAYC,iBAAO,MACnBC,EAAYC,mBAChB,kBAAMC,KAAKC,MAPU,GAOJD,KAAKE,YACtB,IAEIC,EAAOC,MAAMN,GAAWO,KAAKtB,KAiBnC,OAhBAoB,EAAKX,GAAcT,GAAQ,GAE3BuB,qBAAU,WACR,IAAMC,EAAiBC,KAAS,WAC9B,GAAIZ,EAAUa,QAAS,CACrB,IAAMC,EAAed,EAAUa,QAAQE,cAAgB,GACvDhB,EAAUiB,OAAOC,YAAc,EAAIH,EAAe,MAEnD,KAGH,OAFAH,IACAK,OAAOE,iBAAiB,SAAUP,GAC3B,WACLK,OAAOG,oBAAoB,SAAUR,MAEtC,IAGD,sBAAKS,UAAU,YAAf,UACE,oBAAIA,UAAU,gBAAd,SACGb,EAAKc,KAAI,WAA0BC,GAA1B,IAAGjC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,OAAhB,OACR,qBAEE6B,UAAS,6BAAwB7B,EAAS,SAAW,IACrDgC,QAAS,kBAAM1B,EAAUyB,IAH3B,UAKE,oBAAIF,UAAU,sBAAd,SAAqC/B,IACrC,oBAAG+B,UAAU,qBAAb,UACG9B,EACAgC,EAAI,OAPFhC,EAAOgC,EAAI7B,QAYtB,qBACE2B,UAAU,0BACVI,GAAE,iCAA4B/B,GAFhC,SAIE,cAAC,IAAD,CACEgC,IAAK3B,EACL4B,eAAc,kCAA6BjC,GAF7C,SAIE,sBAAKkC,IAAK3B,EAAWoB,UAAU,mBAA/B,UACE,mDACqB3B,EADrB,IAC6BG,KAE7B,wBACEwB,UAAU,mBACVG,QAAS,kBAAM7B,EAAS,GAAD,OAAID,EAAJ,YAAaG,KAFtC,+BC/DNW,G,OAAOC,MAAM,IAAIC,KAAK,KAkBbmB,EAhBH,WACV,IAAMlC,EAAW,SAACmC,GAChBC,QAAQC,IAAIF,GACZ,IAAMG,EAAShB,OAAOiB,SAASC,KAAKC,QAAQ,WAA7B,WAA6CN,IAC5Db,OAAOiB,SAASE,QAAQH,IAE1B,OACE,sBAAKZ,UAAU,MAAf,UACE,qBAAKA,UAAU,aACdb,EAAKc,KAAI,SAACe,EAAGd,GAAJ,OACR,cAAC,EAAD,CAAmB7B,MAAO6B,EAAG5B,SAAUA,GAAvB4B,UCJTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4dcbaeda.chunk.js","sourcesContent":["import { useState, useRef, useMemo, useEffect } from \"react\";\nimport Sticky from \"react-stickynode\";\nimport throttle from \"lodash.throttle\";\nimport \"./OfferPack.css\";\n\nconst getItem = (isActive) => ({\n  title: \"Title \",\n  text: \"This is list item #\",\n  active: isActive || false,\n});\n\nconst LIST_ITEMS_COUNT = 10;\n\nconst OfferPack = ({ index, onSubmit }) => {\n  const [activeItem, setActive] = useState(0);\n  const [middle, setMiddle] = useState(0);\n  const stickyRef = useRef(null);\n  const listCount = useMemo(\n    () => Math.floor(Math.random() * LIST_ITEMS_COUNT),\n    []\n  );\n  const list = Array(listCount).fill(getItem());\n  list[activeItem] = getItem(true);\n\n  useEffect(() => {\n    const onWindowResize = throttle(() => {\n      if (stickyRef.current) {\n        const stickyHeight = stickyRef.current.offsetHeight || 50;\n        setMiddle(window.innerHeight / 2 - stickyHeight / 2);\n      }\n    }, 100);\n    onWindowResize();\n    window.addEventListener(\"resize\", onWindowResize);\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"OfferPack\">\n      <ul className=\"OfferPackList\">\n        {list.map(({ title, text, active }, i) => (\n          <li\n            key={text + i + index}\n            className={`OfferPackList_item ${active ? \"active\" : \"\"}`}\n            onClick={() => setActive(i)}\n          >\n            <h3 className=\"OfferPackList_title\">{title}</h3>\n            <p className=\"OfferPackList_text\">\n              {text}\n              {i + 1}\n            </p>\n          </li>\n        ))}\n      </ul>\n      <div\n        className=\"OfferPack_stickyWrapper\"\n        id={`OfferPack_stickyWrapper${index}`}\n      >\n        <Sticky\n          top={middle}\n          bottomBoundary={`#OfferPack_stickyWrapper${index}`}\n        >\n          <div ref={stickyRef} className=\"OfferPack_sticky\">\n            <p>\n              Selected item is: {index}-{activeItem}\n            </p>\n            <button\n              className=\"OfferPack_submit\"\n              onClick={() => onSubmit(`${index}-${activeItem}`)}\n            >\n              Submit\n            </button>\n          </div>\n        </Sticky>\n      </div>\n    </div>\n  );\n};\n\nexport default OfferPack;\n","import \"normalize.css\";\nimport OfferPack from \"./OfferPack\";\nimport \"./App.css\";\n\nconst list = Array(15).fill(\"\");\n\nconst App = () => {\n  const onSubmit = (value) => {\n    console.dir(value);\n    const newUrl = window.location.href.replace(/\\/[^/]*$/, `/${value}`);\n    window.location.replace(newUrl);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"TopBlock\" />\n      {list.map((_, i) => (\n        <OfferPack key={i} index={i} onSubmit={onSubmit} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}